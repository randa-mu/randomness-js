name: build
on:
  push:
    branches: [master]
  pull_request:

env:
  NETWORK_PRIVATE_KEY: ${{ secrets.NETWORK_PRIVATE_KEY }}
  NETWORK_RPC_URL: ${{ secrets.NETWORK_RPC_URL }}

jobs:
  build:
    runs-on: ["ubuntu-latest"]
    steps:
      - name: Checkout üõéÔ∏è
        uses: "actions/checkout@v4"
        with:
          submodules: recursive

      - name: Install nodejs üîß
        uses: actions/setup-node@v3
        with:
          node-version: 22.3.0

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Test
        run: npm run test

      - name: Publish to npmjs
        uses: JS-DevTools/npm-publish@v1
        if: github.ref == 'refs/heads/master'
        with:
          token: ${{ secrets.NPM_TOKEN }}
          package: package.json
          # don't try and deploy if versions haven't changed
          check-version: true

      - name: Check for version change
        id: version-check
        run: |
          [ "$(git show head^:package.json | jq .version)" = "$(cat package.json | jq .version)" ] && echo "::set-output name=version_changed::true" || echo "::set-output name=version_changed::false"

      - name: Create tag variable
        id: tagging
        if: github.ref == 'refs/heads/master' && steps.version-check.outputs.version_changed == 'true'
        run: echo "::set-output name=new_tag::v$(cat package.json | jq .version | sed "s/['\"]//g")"

      - name: Create a GitHub release
        if: github.ref == 'refs/heads/master' && steps.version-check.outputs.version_changed == 'true'
        uses: ncipollo/release-action@v1
        with:
          custom_tag: ${{ steps.tagging.outputs.new_tag }}
          name: Release ${{ steps.tagging.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
