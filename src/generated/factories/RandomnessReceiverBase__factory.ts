/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  RandomnessReceiverBase,
  RandomnessReceiverBaseInterface,
} from "../RandomnessReceiverBase";

const _abi = [
  {
    type: "function",
    name: "randomnessSender",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IRandomnessSender",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "receiveRandomness",
    inputs: [
      {
        name: "requestID",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "randomness",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
] as const;

export class RandomnessReceiverBase__factory {
  static readonly abi = _abi;
  static createInterface(): RandomnessReceiverBaseInterface {
    return new Interface(_abi) as RandomnessReceiverBaseInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RandomnessReceiverBase {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as RandomnessReceiverBase;
  }
}
