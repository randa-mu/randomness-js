/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  SignatureReceiverBase,
  SignatureReceiverBaseInterface,
} from "../SignatureReceiverBase";

const _abi = [
  {
    type: "function",
    name: "receiveSignature",
    inputs: [
      {
        name: "requestID",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "signature",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "signatureSender",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract ISignatureSender",
      },
    ],
    stateMutability: "view",
  },
] as const;

export class SignatureReceiverBase__factory {
  static readonly abi = _abi;
  static createInterface(): SignatureReceiverBaseInterface {
    return new Interface(_abi) as SignatureReceiverBaseInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SignatureReceiverBase {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as SignatureReceiverBase;
  }
}
