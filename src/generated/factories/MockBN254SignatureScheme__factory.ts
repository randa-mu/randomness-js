/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  MockBN254SignatureScheme,
  MockBN254SignatureSchemeInterface,
} from "../MockBN254SignatureScheme";

const _abi = [
  {
    type: "function",
    name: "DST",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "SCHEME_ID",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "hashToBytes",
    inputs: [
      {
        name: "message",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "hashToPoint",
    inputs: [
      {
        name: "message",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "verifySignature",
    inputs: [
      {
        name: "message",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "signature",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "publicKey",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "isValid",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "error",
    name: "BNAddFailed",
    inputs: [
      {
        name: "input",
        type: "uint256[4]",
        internalType: "uint256[4]",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidDSTLength",
    inputs: [
      {
        name: "dst",
        type: "bytes",
        internalType: "bytes",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidFieldElement",
    inputs: [
      {
        name: "x",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "MapToPointFailed",
    inputs: [
      {
        name: "noSqrt",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "ModExpFailed",
    inputs: [
      {
        name: "base",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "exponent",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "modulus",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f80fd5b5061242e8061001d5f395ff3fe608060405234801561000f575f80fd5b5060043610610064575f3560e01c80638a1f165a1161004d5780638a1f165a146100aa578063eae1e15b146100e6578063f6e548e9146100f9575f80fd5b80633033cc51146100685780635f7c752214610095575b5f80fd5b61007b610076366004612091565b61011c565b604080519283526020830191909152015b60405180910390f35b61009d61018c565b60405161008c919061213b565b61009d6040518060400160405280600581526020017f424e32353400000000000000000000000000000000000000000000000000000081525081565b61009d6100f4366004612091565b6101a8565b61010c610107366004612154565b6101e2565b604051901515815260200161008c565b5f805f6101766040518060600160405280602b81526020016123ce602b913986868080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506102d192505050565b80516020909101519093509150505b9250929050565b6040518060600160405280602b81526020016123ce602b913981565b60605f806101b6858561011c565b915091506101d76040518060400160405280848152602001838152506103b6565b925050505b92915050565b5f8061022288888080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506103ef92505050565b90505f61026387878080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506103ef92505050565b90505f6102a486868080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061048c92505050565b90505f806102b3848487610547565b915091508180156102c15750805b9c9b505050505050505050505050565b604080518082019091525f80825260208201525f6102ef84846106ba565b90505f61030282825b6020020151610805565b90505f6103108360016102f8565b905061031a611fd4565b825181526020808401518282015282516040808401919091529083015160608301525f908460808460066107d05a03fa90508061038e57816040517f128e3f080000000000000000000000000000000000000000000000000000000081526004016103859190612214565b60405180910390fd5b6040805180820190915284518152602081018560016020020151905298975050505050505050565b6040805181815260608181018352915f919060208201818036833750508451602095860151958301525060408101939093525090919050565b604080518082019091525f8082526020820152815160401461046d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f496e76616c6964204731206279746573206c656e6774680000000000000000006044820152606401610385565b5060208181015160409283015183518085019094529083529082015290565b610494611ff2565b81516080146104ff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f496e76616c6964204732206279746573206c656e6774680000000000000000006044820152606401610385565b50602081810151604080840151606080860151608096870151845197880185528785019586529187019290925292855281518083019092528152808301919091529082015290565b5f805f604051806101800160405280875f01518152602001876020015181526020017f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c281526020017f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed81526020017f275dc4a288d1afb3cbb1ac09187524c7db36395df7be3b99e673b13a075a65ec81526020017f1d9befcd05a5323e6da4d435f3b617cdb3af83285c2df711ef39c01571827f9d8152602001855f0151815260200185602001518152602001865f015160016002811061062a5761062a6121e7565b60200201518152602001865f01515f60028110610649576106496121e7565b60200201518152602001866020015160016002811061066a5761066a6121e7565b6020020151815260200186602001515f6002811061068a5761068a6121e7565b60200201519052905061069b612017565b6020816101808460086107d05a03fa9051151597909650945050505050565b6106c2612035565b5f6106cd8484610cad565b90505f805f806018850177ffffffffffffffffffffffffffffffffffffffffffffffff815116935060308601905077ffffffffffffffffffffffffffffffffffffffffffffffff81511694507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47857f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4778010000000000000000000000000000000000000000000000008709086048870151606088015177ffffffffffffffffffffffffffffffffffffffffffffffff908116975016945092507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47905084817801000000000000000000000000000000000000000000000000860908604080518082019091529283526020830152509695505050505050565b61080d612035565b7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478210610869576040517fd53e941500000000000000000000000000000000000000000000000000000000815260048101839052602401610385565b5f7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4760047f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478586090990505f7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478260010890507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47610927837f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47612271565b60010891505f6109597f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47838509610e97565b90505f7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4778016789af3a83522eb353c98fc6b36d713d5d8d1cc5dffffffa7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47847f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47888b09090990505f7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47610a2d837f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47612271565b7f183227397098d014dc2822db40c0ac2ecbc0b548b438e5469e10460b6c3e7ea30890505f7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47837f183227397098d014dc2822db40c0ac2ecbc0b548b438e5469e10460b6c3e7ea30890505f7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4786870990505f7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4786830990505f7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478485097f10216f7ba065e00de81ac1e7808072c9dd2b2385cd7b438469602eb24829a9bd0960010890505f80610b67610b6288610ea1565b610f13565b5f0b600103610bd057868c52610b7c87610ea1565b9050610b8781610fc3565b60208e0191909152915081610bcb576040517f396ec77100000000000000000000000000000000000000000000000000000000815260048101829052602401610385565b610c4c565b610bdc610b6287610ea1565b5f0b600103610bf157858c52610b7c86610ea1565b828c52610bfd83610ea1565b9050610c0881610fc3565b60208e0191909152915081610c4c576040517f396ec77100000000000000000000000000000000000000000000000000000000815260048101829052602401610385565b60208c0151610c5a90610ffd565b610c638e610ffd565b14610c9d5760208c0151610c97907f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47612271565b60208d01525b5050505050505050505050919050565b815160609060ff811115610cef57836040517f26e4f9ba000000000000000000000000000000000000000000000000000000008152600401610385919061213b565b60408051608880825260c082019092525f916020820181803683370190505090505f81855f60605f8a88604051602001610d2f9796959493929190612284565b60405160208183030381529060405290505f818051906020012090505f8160018987604051602001610d649493929190612321565b604080518083037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001815282825280516020820120606080855260808501909352909350915f91602082018180368337019050509050600360015b81811015610e5b57858418610dd5826001612382565b8d8b604051602001610dea9493929190612321565b604080518083037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001815291905260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff830181028501810195909552805194810194909420939450600101610dbf565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016020908102820101919091529550505050505092915050565b5f6101dc82611009565b5f7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4760037f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47847f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47868709090892915050565b5f80610f1e83611761565b9050610f4b60017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47612271565b8103610f7957507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff92915050565b8015801590610f89575080600114155b156101dc576040517f396ec77100000000000000000000000000000000000000000000000000000000815260048101849052602401610385565b5f80610fce8361188e565b9150827f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47838409149050915091565b5f6101dc600283612395565b5f7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478083840991508083830981838209828283098385830984848309858484098684850997508684840987858409945087898a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087818a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087898a09985087818a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087898a09985087838a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087818a09985050868889099750868889099750868889099750868889099750868889099750868889099750868489099750868889099750868889099750868889099750868889099750868889099750868989099750868889099750868889099750868889099750868889099750868889099750868889099750868989099750868889099750868889099750868889099750868889099750868889099750868689099750868889099750868889099750868889099750868889099750868889099750868889099750868889099750868889099750868889099750868189099750508587880996508587880996508587880996508585880996508587880996508587880996508587880996508585880996508587880996508587880996508587880996508587880996508587880996508587880996508587880996508587880996508583880996508587880996508587880996508587880996508587880996508581880996505050838586099450838586099450838586099450838586099450838186099450508284850993508284850993508284850993508281850993508284850993508284850993508285850993508284850993508284850993508284850993508284850993508284850993508284850993508281850995945050505050565b6040805160c080825260e082019092525f918291906020820181803683370190505060208082018181526040830182905260608301829052608083018690527f183227397098d014dc2822db40c0ac2ecbc0b548b438e5469e10460b6c3e7ea360a08401527f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4760c0808501919091529293505f92839160055afa90505f51925080611887576040517fc6daf7ab000000000000000000000000000000000000000000000000000000008152600481018590527f183227397098d014dc2822db40c0ac2ecbc0b548b438e5469e10460b6c3e7ea360248201527f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd476044820152606401610385565b5050919050565b5f7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478083840991508083830981838209828283098385830984848309858484098684850997508684840987858409945087898a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087818a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087898a09985087818a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087878a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a09985087898a09985087898a09985087898a09985087838a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087828a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087848a09985087898a09985087898a09985087898a09985087898a09985087898a09985087868a09985087898a09985087898a099850878a8a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087898a09985087818ab60405180608001604052806004906020820280368337509192915050565b6040518060400160405280612005612035565b8152602001612012612035565b905290565b60405180602001604052806001906020820280368337509192915050565b60405180604001604052806002906020820280368337509192915050565b5f8083601f840112612063575f80fd5b50813567ffffffffffffffff81111561207a575f80fd5b602083019150836020828501011115610185575f80fd5b5f80602083850312156120a2575f80fd5b823567ffffffffffffffff8111156120b8575f80fd5b6120c485828601612053565b90969095509350505050565b5f5b838110156120ea5781810151838201526020016120d2565b50505f910152565b5f81518084526121098160208601602086016120d0565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081525f61214d60208301846120f2565b9392505050565b5f805f805f8060608789031215612169575f80fd5b863567ffffffffffffffff80821115612180575f80fd5b61218c8a838b01612053565b909850965060208901359150808211156121a4575f80fd5b6121b08a838b01612053565b909650945060408901359150808211156121c8575f80fd5b506121d589828a01612053565b979a9699509497509295939492505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b6080810181835f5b600481101561223b57815183526020928301929091019060010161221c565b50505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b818103818111156101dc576101dc612244565b5f8851612295818460208d016120d0565b8851908301906122a9818360208d016120d0565b8082019150507fff00000000000000000000000000000000000000000000000000000000000000808960f81b168252808860f81b166001830152808760f81b1660028301528551612301816003850160208a016120d0565b60f89590951b169301600381019390935250506004019695505050505050565b8481525f7fff00000000000000000000000000000000000000000000000000000000000000808660f81b16602084015284516123648160218601602089016120d0565b60f89490941b16919092016021810191909152602201949350505050565b808201808211156101dc576101dc612244565b5f826123c8577f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b50069056fe424c535f5349475f424e32353447315f584d443a4b454343414b2d3235365f535644575f524f5f4e554c5fa2646970667358221220689cc49aea108b02208ee6485a882ee2cc37a24d60668036a0db8d3ad41e76a564736f6c63430008180033";

type MockBN254SignatureSchemeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockBN254SignatureSchemeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockBN254SignatureScheme__factory extends ContractFactory {
  constructor(...args: MockBN254SignatureSchemeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockBN254SignatureScheme & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): MockBN254SignatureScheme__factory {
    return super.connect(runner) as MockBN254SignatureScheme__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockBN254SignatureSchemeInterface {
    return new Interface(_abi) as MockBN254SignatureSchemeInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockBN254SignatureScheme {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as MockBN254SignatureScheme;
  }
}
